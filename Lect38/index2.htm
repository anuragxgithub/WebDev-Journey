

<!-- https://miro.medium.com/v2/resize:fit:1100/format:webp/1*ubDrM-3m22gLF_pZ4DCdMw.png -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Flexbox</title>
    <style>
        /* NOTE: cross axis and main axis depends on the flex-direction property
        basically cross axis is perpendicular to the flex direction */
        .container {
            border: 2px solid black;
            display: flex;  /*The direction of flex by default is left to right*/
            height: 80vh;
            justify-content: center; /*Aligns flex items along the main axis of the current line of the flex container.*/
            align-items: center;  /*Aligns flex items along the cross axis of the current line of the flex container.*/
            /* flex-direction: column; */
            flex-direction: row;  /*by default*/
            /* flex-wrap: wrap; */
            /* align-content: center; */
            /* there is no justify-items in flexbox; */
            justify-content: flex-start;
            align-content: center;

            /* gap: 30px; gap between flex items (horizontal and vertical) */
            row-gap: 10px;
            column-gap: 20px;
        }
        .item {
            width: 40px;
            height: 40px;
            background-color: pink;
            border: 2px solid grey;
            margin: 5px;
            flex-grow: 1; /*by default it is 0 by specifying it to 1 we said that "sare flex items equal jahi lenge puri width cover krte hue"*/
        }

        /*
        Above properties works on container
        Now see the properties which works on items in flexbox
        */
        /*Order Property: used to specify the order in which items should appear
                          by dafault each items order is 0
                          lower order value item appear first */
        .item1 {
            flex-grow: 2;  /*specifying for porticular item*/
            align-self: flex-start;
        }
        .item2 {
            flex-shrink: 2; /*ability of a flex item to shrink if necessary half tak chhota ho skta hai*/ 
        }
        .item3 {
            align-self: flex-end;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="item item1">1</div>
        <div class="item item2">2</div>
        <div class="item item3">3</div>
        <div class="item">4</div>
        <div class="item"></div>
        <div class="item"></div>
        <div class="item"></div>
        
        
    </div>
</body>
</html>